name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v .

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: 'Build and push image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/pliuwhisper:${{ github.sha }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/pliuwhisper:${{ github.sha }}

    - name: Delete existing Azure Container Instance 
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az container show --name pliuwhisper --resource-group ${{ secrets.RESOURCE_GROUP }}
          if [ $? -eq 0 ]; then
            echo "delete existing aci"
            az container delete -y --name pliuwhisper --resource-group ${{ secrets.RESOURCE_GROUP }}
          else
            echo "no existing aci"
          fi

    - name: 'Deploy to Azure Container Instances'
      uses: 'azure/aci-deploy@v1'
      with:
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        dns-name-label: pliuwhisper
        image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/pliuwhisper:${{ github.sha }}
        registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        name: pliuwhisper
        ports: 5000
        environment-variables: ENV_MYSELF=paige
        secure-environment-variables: ENV_FORWARDURL=${{ secrets.ENV_FORWARDURL }}
        location: "southcentralus"