name: Go

on:
  push:
    branches: [ main ]
    paths-ignore:
    - '**.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
    - '**.md'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v .

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: 'Build and push image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/pliuwhisper:${{ github.sha }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/pliuwhisper:${{ github.sha }}

    - name: Find and Replace REGISTRY_LOGIN_SERVER
      uses: shitiomatic/str-replace@master
      with:
        find: "__REGISTRY_LOGIN_SERVER__"
        replace: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        include: "deploy-aci.yml"

    - name: Find and Replace GITHUB_SHA
      uses: shitiomatic/str-replace@master
      with:
        find: "__GITHUB_SHA__"
        replace: ${{ github.sha }}
        include: "deploy-aci.yml"

    - name: Find and Replace BASE64_SSL_CRT
      uses: shitiomatic/str-replace@master
      with:
        find: "__BASE64_SSL_CRT__"
        replace: ${{ secrets.BASE64_SSL_CRT }}
        include: "deploy-aci.yml"

    - name: Find and Replace BASE64_SSL_KEY
      uses: shitiomatic/str-replace@master
      with:
        find: "__BASE64_SSL_KEY__"
        replace: ${{ secrets.BASE64_SSL_KEY }}
        include: "deploy-aci.yml"

    - name: Find and Replace BASE64_NGINX_CONF
      uses: shitiomatic/str-replace@master
      with:
        find: "__BASE64_NGINX_CONF__"
        replace: ${{ secrets.BASE64_NGINX_CONF }}
        include: "deploy-aci.yml"

    - name: Find and Replace ENV_FORWARDURL
      uses: shitiomatic/str-replace@master
      with:
        find: "__ENV_FORWARDURL__"
        replace: ${{ secrets.ENV_FORWARDURL }}
        include: "deploy-aci.yml"

    - name: Deploy Azure Container Instance 
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az container show --name pliuwhisper --resource-group ${{ secrets.RESOURCE_GROUP }}
          if [ $? -eq 0 ]; then
            echo "delete existing aci"
            az container delete -y --name pliuwhisper --resource-group ${{ secrets.RESOURCE_GROUP }}
          else
            echo "no existing aci"
          fi
          az container create --resource-group ${{ secrets.RESOURCE_GROUP }} --file deploy-aci.yaml


    # - name: 'Deploy to Azure Container Instances'
    #   uses: 'azure/aci-deploy@v1'
    #   with:
    #     resource-group: ${{ secrets.RESOURCE_GROUP }}
    #     dns-name-label: pliuwhisper
    #     image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/pliuwhisper:${{ github.sha }}
    #     registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
    #     registry-username: ${{ secrets.REGISTRY_USERNAME }}
    #     registry-password: ${{ secrets.REGISTRY_PASSWORD }}
    #     name: pliuwhisper
    #     ports: 5000
    #     environment-variables: ENV_MYSELF=paige
    #     secure-environment-variables: ENV_FORWARDURL=${{ secrets.ENV_FORWARDURL }}
    #     location: "southcentralus"